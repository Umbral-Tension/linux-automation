
############### Jeremy's Additions ############
# dot source this file in bashrc

declare -A colors=(
    ["grey"]='\[\033[30m\]' ["red"]='\[\033[31m\]' ["green"]='\[\033[32m\]' ["yellow"]='\[\033[33m\]' ["blue"]='\[\033[34m\]' ["violet"]='\[\033[35m\]' ["teal"]='\[\033[36m\]' ["white"]='\[\033[37m\]' 
    ["brightgrey"]='\[\033[90m\]' ["brightred"]='\[\033[91m\]' ["brightgreen"]='\[\033[92m\]' ["brightyellow"]='\[\033[93m\]' ["brightblue"]='\[\033[94m\]' ["brightviolet"]='\[\033[95m\]' ["brightteal"]='\[\033[96m\]' ["brightwhite"]='\[\033[97m\]'
)

joff='\[\033[00m\]'
bold='\[\033[1m\]'

color-print-codes (){
    # print ansi escape codes in the effect that the code represents
    i=0
    while [ $i -le 107 ]; do
        for column in {0..9}; do
            printf "\033[${i}m${i}\033[0m\t"
            ((i++))
        done
        echo
    done
}

color-set-prompt(){
    # no color
    [[ $1 == "none" ]] && PS1="\n\u@\h:\w\n┖───▶\$ " && return
    
    # set user and cwd colors to those specified in args 1 and 2
    [[ $1 ]] && user_color=${colors[$1]} 
    [[ $2 ]] && cwd_color=${colors[$2]} 

    # set standard blue-green if no arguments are given
    [[ ! $1 ]] && user_color=${colors["blue"]} 
    [[ ! $2 ]] && cwd_color=${colors["green"]}

    PS1="$joff\n$user_color\u$cwd_color@$user_color\h$joff:$cwd_color\w\n└──▶$joff\$ "
}

color-prompt-demo(){ 
    # print ps1 in all color combinations excluding brightwhite
    declare -A altcolors=(["grey"]='\033[30m' ["red"]='\033[31m' ["green"]='\033[32m' ["yellow"]='\033[33m' ["blue"]='\033[34m' ["violet"]='\033[35m' ["teal"]='\033[36m' ["white"]='\033[37m' ["brightgrey"]='\033[90m' ["brightred"]='\033[91m' ["brightgreen"]='\033[92m' ["brightyellow"]='\033[93m' ["brightblue"]='\033[94m' ["brightviolet"]='\033[95m' ["brightteal"]='\033[96m')
    color_names=(grey brightgrey red brightred green brightgreen yellow brightyellow blue brightblue violet brightviolet teal brightteal white)
    altjoff='\033[00m'
    for x in ${color_names[@]}; do 
        color_a=${altcolors[$x]}
        for y in ${color_names[@]}; do 
            color_b=${altcolors[$y]}
            echo -e "$altjoff\n${color_a}user$color_b@${color_a}host$altjoff:${color_b}a/fake/directory/\n└──▶$altjoff\$ ls -al \n"
        done
    done
}

# get current gnome terminal theme name
curr_theme=$(dconf read /org/gnome/terminal/legacy/profiles:/default | sed "s/'//g")
curr_theme=$(dconf read /org/gnome/terminal/legacy/profiles:/:"$curr_theme"/visible-name | sed "s/'//g")

# set custom bash prompt
case $curr_theme in
    "Aura") 
        color-set-prompt violet green ;;
    "Srcery")
        color-set-prompt brightblue brightgreen ;;
    "Clone Of Ubuntu")
        color-set-prompt brightviolet brightyellow ;;
    "Gogh")
        color-set-prompt blue brightgreen ;;
    *)  
        color-set-prompt "" "" ;;
esac


fedora=false && cat /etc/os-release | grep fedora > /dev/null && fedora=true

# ipython - can't use pip install ipython anymore (due to PEP 668). Installed ipython3 from apt package manager instead. 
alias ipython=ipython3

# Keyd 
alias rekeyd='sudo cp ~/jdata/git-repos/linux-automation/resources/configs/my_keyd.conf /etc/keyd/default.conf && sudo systemctl restart keyd' 
alias keyderr='sudo journalctl -eu keyd'

# cd to common directories  
alias gogit='cd ~/jdata/git-repos'
alias godat='cd ~/jdata'
alias gomus='cd ~/jdata/audio/music'

if [[ $fedora == true ]] ; then 
    alias goext='cd /run/media/jeremy/external_2TB'
    alias goint='cd /run/media/jeremy/internal_6TB/'
else 
    alias goext='cd /media/jeremy/external_2TB'
    alias goint='cd /media/jeremy/internal_6TB/'
fi

# make ll show all files and append type symbol to end of names
alias ll='ls -alF'

# Tree 
alias tree1='tree -L 1'
alias tree2='tree -L 2'
alias tree3='tree -L 3'

# gnome-text-editor
alias gte='gnome-text-editor'

# reload dconf keyboard shortcuts from linux-automation repo
alias jdconf-reload='
    dconf load -f "/org/gnome/settings-daemon/plugins/media-keys/" < "/home/jeremy/jdata/git-repos/linux-automation/resources/configs/dconf/fedora/dirs/~~org~~gnome~~settings-daemon~~plugins~~media-keys~~" \
    && dconf load -f "/org/gnome/desktop/wm/keybindings/" < "/home/jeremy/jdata/git-repos/linux-automation/resources/configs/dconf/fedora/dirs/~~org~~gnome~~desktop~~wm~~keybindings~~" ' 

# ignore case when usin tab completion
bind "set completion-ignore-case on"

# Display a list of the matching files
bind "set show-all-if-ambiguous on"

# Fixes issue with virtualenv putting bin dir in the wrong directory. 
#export DEB_PYTHON_INSTALL_LAYOUT='deb'
